const heart = "h";
const player = "p";

setLegend(
  [ heart, bitmap`
................
................
................
................
................
....55....55....
...5555..5555...
...5555555555...
...5555555555...
....55555555....
.....555555.....
......5555......
.......55.......
................
................
................` ],
  [ player, bitmap`
................
................
................
0000........0000
0000........0000
0020........0200
0000........0000
.......00.......
.......00.......
......0000......
......0000......
................
0..............0
.00000000000000.
..0..0....0..0..
...0000000000...`]
);

let level = 0;
const levels = [
  map`
..h..
.....
.....
.....
.....
.....
.....
.....
.....
..p..`,
  map`
...h...
.......
.......
.......
.......
.......
.......
.......
.......
...p...`,
  map`
....h....
.........
.........
.........
.........
.........
.........
.........
.........
.........
....p....`,
  map`
.....h.....
...........
...........
...........
...........
...........
...........
...........
...........
.....p.....`,
  map`
.....h.....
...........
...........
...........
...........
...........
...........
.....p.....`,
  map`
.....h.....
...........
...........
...........
...........
.....p.....`
];

currentLevel = levels[level];
setMap(currentLevel);

setPushables({
  [ player ]: []
})

let lastMoveTime = performance.now();

// Function to move the sprite at regular intervals
const moveSprite = () => {
  getFirst(heart).y += 1;
  lastMoveTime = performance.now();
};

let lose = false;
let score = 0;
let speed = 500

const plus = tune`
1500: C4/1500 + F4/1500,
46500`;
const levelUp = tune`
200: E4/200,
200: G4/200,
200: B4/200 + E4/200,
200: E5/200 + G4/200,
200: G5/200 + B4/200,
200: E5/200 + B5/200,
200: B4/200 + G5/200,
200: G4/200 + E5/200,
200: E4/200 + B4/200,
200: G4/200,
200: E4/200,
4200`;
const speedUp = tune`
37.5: G5-37.5,
37.5: G5-37.5,
37.5: A5-37.5,
37.5: B5-37.5,
1050`;
const lost = tune`
500: A4/500 + C5/500 + E5/500,
500: E4/500 + G4/500 + B4/500,
500: D4/500 + F4/500 + A4/500,
500: E4/500 + G4/500 + B4/500,
500: A4/500 + C5/500 + E5/500,
13500`;

setInterval(() => {
  if (performance.now() - lastMoveTime >= speed) {
    moveSprite();
  }
  let playerSprite = getFirst("p");
  let heartSprite = getFirst("h");
  if (playerSprite.x === heartSprite.x && playerSprite.y === heartSprite.y) {
    heartSprite.remove();
    playTune(plus);
    let x = getRandomInt(0, width() - 1);
    addSprite(x, 0, "h");
    score += 1;
    if (score % 20 === 0 && level !== levels.length) {
      level = level + 1;
      const currentLevel = levels[level];
      if (currentLevel !== undefined) {
        setMap(currentLevel);
        playTune(levelUp);
      }
    }
    else if (score % 10 === 0) {
      speed = speed / 2;
      playTune(speedUp);
    }
  }
  else if (playerSprite.y === heartSprite.y) {
    lose = true;
  }

  if (lose) {
    playTune(lost);
    addText("Score:" + score, { y: 7, color: color`3` });
  }
}, 0);

moveSprite();

function getRandomInt(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

onInput("d", () => {
  if (!lose) {
    getFirst(player).x += 1
  }
})
onInput("a", () => {
  if (!lose) {
    getFirst(player).x -= 1
  }
})